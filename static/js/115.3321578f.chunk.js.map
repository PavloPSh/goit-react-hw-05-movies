{"version":3,"file":"static/js/115.3321578f.chunk.js","mappings":"8RAEaA,EAAUC,EAAAA,GAAAA,GAAH,iJACD,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIT,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGCC,EAAWJ,EAAAA,GAAAA,GAAH,sFACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,QAAQC,IAApB,IACM,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,MAAMC,EAAlB,I,SC6CtB,EAjDa,WAET,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAO,mCAAG,oGAERJ,GAAW,GACXF,EAAS,MAHD,UAKgBO,EAAAA,EAAAA,IAAaJ,GAL7B,OAKFK,EALE,OAMRV,EAAQU,GANA,gDASRR,EAAS,EAAD,IATA,yBAWRE,GAAW,GAXH,4EAAH,qDAcbI,GACH,GAAE,CAACH,IAEJ,IAAMM,EAAyB,IAAhBZ,EAAKa,OACdC,EAA2B,IAAhBd,EAAKa,QAAgBX,IAAUE,EAEhD,OACI,gCACKA,IAAW,SAACW,EAAA,EAAD,IACXD,IAAY,SAACE,EAAA,EAAD,CAAKC,GAAG,IAAIC,QAAQ,OAAOC,eAAe,SAASC,GAAG,OAAtD,+CACZR,IACG,SAACvB,EAAD,UACKW,EAAKqB,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,GAAIC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OAEN,UAAC/B,EAAD,YACI,SAACsB,EAAA,EAAD,CAAKC,GAAG,MAAMS,aAAa,MAAMC,IAAG,yCAAoCF,GAAgBG,IAAKJ,KAC7F,UAACR,EAAA,EAAD,CAAKzB,EAAE,MAAP,WACI,kCAAUiC,MACV,uCAAeF,UAJRC,EAFT,QAY7B,C,8LCrDKM,EAAU,mCACVC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACoBC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,oCAAiDD,IADrE,uBACKI,EADL,EACKA,KADL,kBAEIA,EAAKC,SAFT,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BZ,GAA5B,yFACoBS,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA8BP,EAA9B,oBAA4CM,IADhE,uBACKI,EADL,EACKA,KADL,kBAEIA,GAFJ,kEAKA,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAA4Ba,GAA5B,yFACoBS,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA8BP,EAA9B,4BAAoDM,IADxE,uBACKI,EADL,EACKA,KADL,kBAEIA,EAAKjC,MAFT,kEAKA,SAAeoC,EAAtB,+CAAO,OAAP,oBAAO,WAA6Bb,GAA7B,yFACoBS,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA8BP,EAA9B,4BAAoDM,IADxE,uBACKI,EADL,EACKA,KADL,kBAEIA,EAAKC,SAFT,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACoBN,EAAAA,GAAAA,IAAA,UAAaF,EAAb,gCAA6CD,EAA7C,kBAA8DS,IADlF,uBACKL,EADL,EACKA,KADL,kBAEIA,EAAKC,SAFT,kE","sources":["components/cast/Cast.styled.js","components/cast/Cast.jsx","services/filmApi.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastBox = styled.ul`\n    padding-top: ${p => p.theme.space[5]}px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    gap: ${p => p.theme.space[4]}px;\n`;\n\nexport const CastItem = styled.li`\n    border: ${p => p.theme.borders.card};\n    border-radius: ${p => p.theme.radii.sm};\n    width: 202px;\n`;\n\n","import { useState,useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport { getFilmsCast } from \"services/filmApi\";\nimport { Loader } from \"components/loader/Loader\";\n\nimport { Box } from \"Box\";\nimport { CastBox, CastItem,  } from \"./Cast.styled\";\n\nconst Cast = () => {\n\n    const [cast, setCast] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const getCast = async () => {\n            try {\n                setLoading(true);\n                setError(null);\n\n                const movieCast = await getFilmsCast(movieId);\n                setCast(movieCast);\n\n            } catch (error) {\n                setError(error);\n            } finally {\n                setLoading(false);\n            }\n        }\n        getCast();\n    }, [movieId]);\n\n    const isCast = cast.length !== 0;\n    const isNoCast = cast.length === 0 && error && !loading;\n\n    return (\n        <>\n            {loading && <Loader />}\n            {isNoCast && <Box as='p' display='flex' justifyContent='center' pt='32px'>Ooops...There is no cast info yet</Box>}\n            {isCast &&\n                <CastBox>\n                    {cast.map(({ character, id, name, profile_path }) => (\n                        \n                        <CastItem key={id}>\n                            <Box as='img' borderRadius='6px' src={`https://image.tmdb.org/t/p/w200${profile_path}`} alt={name} />\n                            <Box p='8px'>\n                                <p>Name: {name}</p>\n                                <p>Character: {character}</p>\n                            </Box>\n                        </CastItem>))}\n                </CastBox>}\n        </>\n    )\n}\n\nexport default Cast;","import axios from \"axios\";\n\nconst API_KEY = 'f64cdb7daa669b42fe97bd3c6db06632';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrandingFilms() {\n    const { data } = await axios.get(`${BASE_URL}trending/all/day?api_key=${API_KEY}`);\n    return data.results;\n}\n\nexport async function getFilmsById(id) {\n    const { data } = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n    return data;\n}\n\nexport async function getFilmsCast(id) {\n    const { data } = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n    return data.cast;\n}\n\nexport async function getFilmReview(id) {\n    const { data } = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n    return data.results;\n}\n\nexport async function getSearchFilms(query) {\n    const { data } = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`);\n    return data.results;\n}"],"names":["CastBox","styled","p","theme","space","CastItem","borders","card","radii","sm","useState","cast","setCast","error","setError","loading","setLoading","movieId","useParams","useEffect","getCast","getFilmsCast","movieCast","isCast","length","isNoCast","Loader","Box","as","display","justifyContent","pt","map","character","id","name","profile_path","borderRadius","src","alt","API_KEY","BASE_URL","getTrandingFilms","axios","data","results","getFilmsById","getFilmReview","getSearchFilms","query"],"sourceRoot":""}