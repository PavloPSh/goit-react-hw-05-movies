{"version":3,"file":"static/js/910.bcafe69a.chunk.js","mappings":"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","sources":["components/trandingList/TrandingList.styled.js","components/trandingList/TrandingList.jsx","pages/homePage/HomePage.jsx","services/filmApi.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const MovieList = styled.ul`\n    padding-top: ${p => p.theme.space[5]}px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n\n`;\n\nexport const MovieItem = styled.li`\n    max-width: 344px;\n    margin-bottom: ${p=>p.theme.space[5]}px;\n    border: ${p=>p.theme.borders.card};\n    border-radius: ${p => p.theme.radii.sm};\n    \n    &:hover{\n        box-shadow: ${p => p.theme.shadows.slim};\n    }\n`;\n\nexport const MovieItemInfo = styled.div`\n    /* display: flex;\n    flex-direction: column;\n    gap: ${p=>p.theme.space[5]}px;\n    margin-left: ${p=>p.theme.space[4]}px; */\n`;\n\nexport const MovieLink = styled(Link)`\n    color: ${p => p.theme.colors.black};\n    font-size: 24px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: ${p=>p.theme.space[4]}px;\n    &:hover,\n    &:focus{\n        text-shadow: ${p => p.theme.shadows.text};;\n        color: ${p => p.theme.colors.primary};\n        outline: none;\n    }\n`;\n\n","import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nimport { Box } from \"Box\";\nimport { MovieItem, MovieItemInfo,MovieList, MovieLink } from \"./TrandingList.styled\";\n\nexport const TrandingList = ({ data }) => {\n\n\n    const location = useLocation();\n\n    return (\n        <MovieList>\n            {data.map(({ id, title, name, poster_path }) => (\n                <MovieItem key={id}>\n                    \n                    <Link to={`/movies/${id}`} state={{ from: location }}>\n                        <Box as='img' borderRadius='6px' src={`https://image.tmdb.org/t/p/w342${poster_path}`} alt={name} />\n                            \n                    </Link>\n                    <MovieItemInfo>\n                        <Box as='h2'  >\n                            <MovieLink to={`/movies/${id}`} state={{ from: location }}>{title ?? name}</MovieLink>\n                        </Box>\n                    </MovieItemInfo>\n                    \n                    \n                </MovieItem>))}\n        </MovieList>\n    );\n};\n\nTrandingList.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string,\n        name: PropTypes.string,\n        poster_path: PropTypes.string,\n    }))\n};","import { useState, useEffect } from \"react\";\nimport { getTrandingFilms } from \"services/filmApi\";\nimport { TrandingList } from \"components/trandingList/TrandingList\";\nimport { Loader } from \"components/loader/Loader\";\n\nimport { Box } from \"Box\";\n\n\nconst HomePage = () => {\n\n    const [tranding, setTranding] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n\n\n    useEffect(() => {\n        const getTranding = async () => {\n\n            setLoading(true);\n            setError(null);\n\n            try {\n                const data = await getTrandingFilms();\n\n                setTranding([...data])\n            } catch (error) {\n                setError(error);\n            } finally {\n                setLoading(false);\n            }\n        };\n        getTranding();\n    }, []);\n\n\n    const isTranding = tranding.length > 0;\n    const isNoTranding = tranding.length === 0 && error && !loading;\n\n    return (\n        <Box p='32px' pt='0' >\n            \n            <Box as='h2' pt='32px'>Tranding today:</Box>\n            {loading && <Loader />}\n            {isNoTranding && <Box as='h3' display='flex' justifyContent='center' pt='32px'>Something went wrong...</Box>}\n            {isTranding && <TrandingList data={tranding} />}\n             \n        </Box>\n    )\n};\n\nexport default HomePage;","import axios from \"axios\";\n\nconst API_KEY = 'f64cdb7daa669b42fe97bd3c6db06632';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrandingFilms() {\n    const { data } = await axios.get(`${BASE_URL}trending/all/day?api_key=${API_KEY}`);\n    return data.results;\n}\n\nexport async function getFilmsById(id) {\n    const { data } = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n    return data;\n}\n\nexport async function getFilmsCast(id) {\n    const { data } = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n    return data.cast;\n}\n\nexport async function getFilmReview(id) {\n    const { data } = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n    return data.results;\n}\n\nexport async function getSearchFilms(query) {\n    const { data } = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`);\n    return data.results;\n}"],"names":["MovieList","styled","p","theme","space","MovieItem","borders","card","radii","sm","shadows","slim","MovieItemInfo","MovieLink","Link","colors","black","text","primary","TrandingList","data","location","useLocation","map","id","title","name","poster_path","to","state","from","Box","as","borderRadius","src","alt","useState","tranding","setTranding","error","setError","loading","setLoading","useEffect","getTranding","getTrandingFilms","isTranding","length","isNoTranding","pt","display","justifyContent","T","API_KEY","BASE_URL","axios","results","getFilmsById","getFilmsCast","cast","getFilmReview","getSearchFilms","query"],"sourceRoot":""}